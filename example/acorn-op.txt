//Declaration


//Objects


day = {1, 2, 3, 4, 5}


patch = {P1, P2}


bool = {T, F}




//Attibutes


HiddenIn(patch)


FoundPf(day)


Look(patch, day)


Found(patch, day)




// Choice Rules


HiddenIn(x) => HiddenIn(x).


FoundPf(x) => FoundPf(x).


Look(x, y) => Look(x, y).




// Acorn is hidden in Patch 1 with probability 0.8­


0.2231 HiddenIn(P1)


1.6093 HiddenIn(P2)


Found(x,1).

// There is 0.2 chance to find the acorn in the right patch­


1.6093 FoundPf(x)


//0.2231 !FoundPf(x)


LookRightPatch(patch, day)


Look(x, y) ^ HiddenIn(x) => LookRightPatch(x, y).


LookRightPatch(x, y) ^ FoundPf(y) => Found(x, y).




// UEC


(EXIST x HiddenIn(x)).


!(EXIST x,y (HiddenIn(x) ^ HiddenIn(y) ^ x != y)).


(EXIST x Look(x, y)).


!(EXIST x1, x2 (Look(x1, y) ^ Look(x2, y) ^ x1 != x2)).
//parsing complete!
Found(_a,_b) => (_b=1).
HiddenIn(_a) => (_a=P1) v (_a=P2).
Found(_a,_b) => (LookRightPatch(_a,_b) ^ FoundPf(_b)).
FoundPf(_a) => (FoundPf(_a)).
HiddenIn(_a) => (HiddenIn(_a)).
Look(_a,_b) => (Look(_a,_b)).
LookRightPatch(_a,_b) => (Look(_a,_b) ^ HiddenIn(_a)).
