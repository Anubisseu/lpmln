State 0:
          start ::= * prog
          prog ::= * prog NEWLINE domain
          prog ::= * domain
          prog ::= * prog NEWLINE predicate
          prog ::= * predicate
          prog ::= * prog NEWLINE decl
          prog ::= * decl
          prog ::= * prog NEWLINE rule
          prog ::= * rule
          prog ::= * prog NEWLINE
     (10) prog ::= *
          rule ::= * number REVERSE_IMPLICATION LBRACKET ruleU RBRACKET
          rule ::= * number LBRACKET ruleU RBRACKET
          rule ::= * REVERSE_IMPLICATION LBRACKET ruleU RBRACKET DOT
          rule ::= * LBRACKET ruleU RBRACKET DOT
          rule ::= * REVERSE_IMPLICATION body DOT
          rule ::= * head DISJUNCTION bodydef DOT
          rule ::= * number head DISJUNCTION bodydef
          rule ::= * head REVERSE_IMPLICATION body DOT
          rule ::= * number head REVERSE_IMPLICATION body
          rule ::= * number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          rule ::= * LPAREN head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION string LBRACKET variables RBRACKET
          predicate ::= * NEGATION NEGATION string LBRACKET variables RBRACKET DOT
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        LPAREN shift        20     
                      LBRACKET shift        5      
           REVERSE_IMPLICATION shift        22     
                      NEGATION shift        33     
                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                         start accept
                          prog shift        74     
                        domain shift-reduce 2      prog ::= domain
                     predicate shift-reduce 4      prog ::= predicate
                          decl shift-reduce 6      prog ::= decl
                          rule shift-reduce 8      prog ::= rule
                       bodydef shift-reduce 26     head ::= bodydef
                          head shift        57     
                        number shift        18     
                        string shift        48     
                       lnumber shift        100    
                     {default} reduce       10     prog ::=

State 1:
          prog ::= prog NEWLINE * domain
          prog ::= prog NEWLINE * predicate
          prog ::= prog NEWLINE * decl
          prog ::= prog NEWLINE * rule
      (9) prog ::= prog NEWLINE *
          rule ::= * number REVERSE_IMPLICATION LBRACKET ruleU RBRACKET
          rule ::= * number LBRACKET ruleU RBRACKET
          rule ::= * REVERSE_IMPLICATION LBRACKET ruleU RBRACKET DOT
          rule ::= * LBRACKET ruleU RBRACKET DOT
          rule ::= * REVERSE_IMPLICATION body DOT
          rule ::= * head DISJUNCTION bodydef DOT
          rule ::= * number head DISJUNCTION bodydef
          rule ::= * head REVERSE_IMPLICATION body DOT
          rule ::= * number head REVERSE_IMPLICATION body
          rule ::= * number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          rule ::= * LPAREN head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION string LBRACKET variables RBRACKET
          predicate ::= * NEGATION NEGATION string LBRACKET variables RBRACKET DOT
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        LPAREN shift        20     
                      LBRACKET shift        5      
           REVERSE_IMPLICATION shift        22     
                      NEGATION shift        33     
                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                        domain shift-reduce 1      prog ::= prog NEWLINE domain
                     predicate shift-reduce 3      prog ::= prog NEWLINE predicate
                          decl shift-reduce 5      prog ::= prog NEWLINE decl
                          rule shift-reduce 7      prog ::= prog NEWLINE rule
                       bodydef shift-reduce 26     head ::= bodydef
                          head shift        57     
                        number shift        18     
                        string shift        48     
                       lnumber shift        100    
                     {default} reduce       9      prog ::= prog NEWLINE

State 2:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          predicate ::= NEGATION NEGATION string LBRACKET * variables RBRACKET DOT
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        51     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 3:
          domains ::= LPAREN * variables RPAREN
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        52     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 4:
          bodydef ::= string LBRACKET * variables RBRACKET
          decl ::= string LBRACKET * variables RBRACKET
          predicate ::= string LBRACKET * variables RBRACKET DOT
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        53     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 5:
          rule ::= LBRACKET * ruleU RBRACKET DOT
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * head DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        36     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        103    
                       bodydef shift        89     
                          head shift        91     
                         ruleU shift        80     
                        string shift        50     

State 6:
          rule ::= REVERSE_IMPLICATION LBRACKET * ruleU RBRACKET DOT
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * head DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        36     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        103    
                       bodydef shift        89     
                          head shift        91     
                         ruleU shift        82     
                        string shift        50     

State 7:
          bodydef ::= string LBRACKET * variables RBRACKET
          predicate ::= number string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        60     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 8:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          predicate ::= number NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        62     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 9:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        64     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 10:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET * variables RBRACKET RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        69     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 11:
          rule ::= number LBRACKET * ruleU RBRACKET
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * head DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        36     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        103    
                       bodydef shift        89     
                          head shift        91     
                         ruleU shift        88     
                        string shift        50     

State 12:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET * variables RBRACKET RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        70     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 13:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        71     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 14:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        72     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 15:
          bodydef ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                     variables shift        73     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 42     variables ::= variable
                       lnumber shift        100    

State 16:
          rule ::= number REVERSE_IMPLICATION LBRACKET * ruleU RBRACKET
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * head DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        103    
                       bodydef shift        89     
                          head shift        91     
                         ruleU shift        104    
                        string shift        50     

State 17:
          variables ::= variables COMMA * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 46     string ::= STRING
                        NUMBER shift        101    
                         MINUS shift        45     
                        number shift-reduce 45     variable ::= number
                        string shift-reduce 44     variable ::= string
                      variable shift-reduce 43     variables ::= variables COMMA variable
                       lnumber shift        100    

State 18:
          rule ::= number * REVERSE_IMPLICATION LBRACKET ruleU RBRACKET
          rule ::= number * LBRACKET ruleU RBRACKET
          rule ::= number * head DISJUNCTION bodydef
          rule ::= number * head REVERSE_IMPLICATION body
          rule ::= number * NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          predicate ::= number * string LBRACKET variables RBRACKET
          predicate ::= number * NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= number * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        11     
           REVERSE_IMPLICATION shift        105    
                      NEGATION shift        35     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift-reduce 26     head ::= bodydef
                          head shift        68     
                        string shift        49     

State 19:
          rule ::= LPAREN head RPAREN REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        54     
                       bodydef shift-reduce 27     body ::= bodydef
                        string shift        50     

State 20:
          rule ::= LPAREN * head RPAREN REVERSE_IMPLICATION body DOT
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift-reduce 26     head ::= bodydef
                          head shift        55     
                        string shift        50     

State 21:
          rule ::= head REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        56     
                       bodydef shift-reduce 27     body ::= bodydef
                        string shift        50     

State 22:
          rule ::= REVERSE_IMPLICATION * LBRACKET ruleU RBRACKET DOT
          rule ::= REVERSE_IMPLICATION * body DOT
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        6      
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        58     
                       bodydef shift-reduce 27     body ::= bodydef
                        string shift        50     

State 23:
          rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION * body RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        65     
                       bodydef shift-reduce 27     body ::= bodydef
                        string shift        50     

State 24:
          rule ::= number NEGATION NEGATION LBRACKET * head REVERSE_IMPLICATION body RBRACKET
          head ::= * head DISJUNCTION bodydef
          head ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift-reduce 26     head ::= bodydef
                          head shift        66     
                        string shift        50     

State 25:
          rule ::= number head REVERSE_IMPLICATION * body
          body ::= * body CONJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                          body shift        85     
                       bodydef shift-reduce 27     body ::= bodydef
                        string shift        50     

State 26:
          rule ::= head DISJUNCTION * bodydef DOT
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift        78     
                        string shift        50     

State 27:
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift-reduce 25     head ::= head DISJUNCTION bodydef
                        string shift        50     

State 28:
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift-reduce 24     body ::= body CONJUNCTION bodydef
                        string shift        50     

State 29:
          rule ::= number head DISJUNCTION * bodydef
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift        67     
                        string shift        50     

State 30:
          ruleU ::= head DISJUNCTION * bodydef
          head ::= head DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift        90     
                        string shift        50     

State 31:
          ruleU ::= body CONJUNCTION * bodydef
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        95     
                      NEGATION shift        37     
                        STRING shift-reduce 46     string ::= STRING
                       bodydef shift        102    
                        string shift        50     

State 32:
          bodydef ::= string EQUAL * string
          domain ::= string EQUAL * domains
          domains ::= * LPAREN variables RPAREN
          string ::= * STRING

                        LPAREN shift        3      
                        STRING shift-reduce 46     string ::= STRING
                       domains shift-reduce 40     domain ::= string EQUAL domains
                        string shift-reduce 32     bodydef ::= string EQUAL string

State 33:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= NEGATION * NEGATION string LBRACKET variables RBRACKET DOT
          string ::= * STRING

                      NEGATION shift        38     
                        STRING shift-reduce 46     string ::= STRING
                        string shift        97     

State 34:
          rule ::= number NEGATION NEGATION * LBRACKET head REVERSE_IMPLICATION body RBRACKET
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          predicate ::= number NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        24     
                        STRING shift-reduce 46     string ::= STRING
                        string shift        84     

State 35:
          rule ::= number NEGATION * NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= number NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= number NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        34     
                        STRING shift-reduce 46     string ::= STRING
                        string shift        83     

State 36:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION * NEGATION string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                      NEGATION shift        39     
                        STRING shift-reduce 46     string ::= STRING
                        string shift        97     

State 37:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        41     
                        STRING shift-reduce 46     string ::= STRING
                        string shift        97     

State 38:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          predicate ::= NEGATION NEGATION * string LBRACKET variables RBRACKET DOT
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift        76     

State 39:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION * string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift        87     

State 40:
          bodydef ::= LBRACKET NEGATION NEGATION * string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift        93     

State 41:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift        96     

State 42:
          bodydef ::= string NEGATION EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift-reduce 33     bodydef ::= string NEGATION EQUAL string

State 43:
          bodydef ::= string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 46     string ::= STRING
                        string shift-reduce 32     bodydef ::= string EQUAL string

State 44:
          number ::= MINUS lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 51     rnumber ::= NUMBER
                       rnumber shift-reduce 49     number ::= MINUS lnumber DOT rnumber

State 45:
          number ::= MINUS * lnumber DOT rnumber
          lnumber ::= * NUMBER

                        NUMBER shift-reduce 50     lnumber ::= NUMBER
                       lnumber shift        99     

State 46:
          number ::= lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 51     rnumber ::= NUMBER
                       rnumber shift-reduce 48     number ::= lnumber DOT rnumber

State 47:
     (28) bodydef ::= string LBRACKET variables RBRACKET *
     (34) decl ::= string LBRACKET variables RBRACKET *
          predicate ::= string LBRACKET variables RBRACKET * DOT

                   DISJUNCTION reduce       28     bodydef ::= string LBRACKET variables RBRACKET
           REVERSE_IMPLICATION reduce       28     bodydef ::= string LBRACKET variables RBRACKET
                           DOT shift-reduce 35     predicate ::= string LBRACKET variables RBRACKET DOT
                     {default} reduce       34     decl ::= string LBRACKET variables RBRACKET

State 48:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          decl ::= string * LBRACKET variables RBRACKET
          predicate ::= string * LBRACKET variables RBRACKET DOT
          domain ::= string * EQUAL domains

                         EQUAL shift        32     
                      LBRACKET shift        4      
                      NEGATION shift        98     

State 49:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          predicate ::= number string * LBRACKET variables RBRACKET

                         EQUAL shift        43     
                      LBRACKET shift        7      
                      NEGATION shift        98     

State 50:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string

                         EQUAL shift        43     
                      LBRACKET shift        15     
                      NEGATION shift        98     

State 51:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          predicate ::= NEGATION NEGATION string LBRACKET variables * RBRACKET DOT
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        75     

State 52:
          domains ::= LPAREN variables * RPAREN
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                        RPAREN shift-reduce 41     domains ::= LPAREN variables RPAREN

State 53:
          bodydef ::= string LBRACKET variables * RBRACKET
          decl ::= string LBRACKET variables * RBRACKET
          predicate ::= string LBRACKET variables * RBRACKET DOT
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        47     

State 54:
          rule ::= LPAREN head RPAREN REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        28     
                           DOT shift-reduce 23     rule ::= LPAREN head RPAREN REVERSE_IMPLICATION body DOT

State 55:
          rule ::= LPAREN head * RPAREN REVERSE_IMPLICATION body DOT
          head ::= head * DISJUNCTION bodydef

                        RPAREN shift        77     
                   DISJUNCTION shift        27     

State 56:
          rule ::= head REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        28     
                           DOT shift-reduce 20     rule ::= head REVERSE_IMPLICATION body DOT

State 57:
          rule ::= head * DISJUNCTION bodydef DOT
          rule ::= head * REVERSE_IMPLICATION body DOT
          head ::= head * DISJUNCTION bodydef

                   DISJUNCTION shift        26     
           REVERSE_IMPLICATION shift        21     

State 58:
          rule ::= REVERSE_IMPLICATION body * DOT
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        28     
                           DOT shift-reduce 17     rule ::= REVERSE_IMPLICATION body DOT

State 59:
     (28) bodydef ::= string LBRACKET variables RBRACKET *
     (36) predicate ::= number string LBRACKET variables RBRACKET *

                   DISJUNCTION reduce       28     bodydef ::= string LBRACKET variables RBRACKET
           REVERSE_IMPLICATION reduce       28     bodydef ::= string LBRACKET variables RBRACKET
                     {default} reduce       36     predicate ::= number string LBRACKET variables RBRACKET

State 60:
          bodydef ::= string LBRACKET variables * RBRACKET
          predicate ::= number string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        59     

State 61:
     (29) bodydef ::= NEGATION string LBRACKET variables RBRACKET *
     (38) predicate ::= number NEGATION string LBRACKET variables RBRACKET *

                   DISJUNCTION reduce       29     bodydef ::= NEGATION string LBRACKET variables RBRACKET
           REVERSE_IMPLICATION reduce       29     bodydef ::= NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       38     predicate ::= number NEGATION string LBRACKET variables RBRACKET

State 62:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          predicate ::= number NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        61     

State 63:
     (30) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
     (37) predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET *

                   DISJUNCTION reduce       30     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET
           REVERSE_IMPLICATION reduce       30     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       37     predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET

State 64:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        63     

State 65:
          rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body * RBRACKET
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        28     
                      RBRACKET shift-reduce 22     rule ::= number NEGATION NEGATION LBRACKET head REVERSE_IMPLICATION body RBRACKET

State 66:
          rule ::= number NEGATION NEGATION LBRACKET head * REVERSE_IMPLICATION body RBRACKET
          head ::= head * DISJUNCTION bodydef

                   DISJUNCTION shift        27     
           REVERSE_IMPLICATION shift        23     

State 67:
     (19) rule ::= number head DISJUNCTION bodydef *
     (25) head ::= head DISJUNCTION bodydef *

                   DISJUNCTION reduce       25     head ::= head DISJUNCTION bodydef
           REVERSE_IMPLICATION reduce       25     head ::= head DISJUNCTION bodydef
                     {default} reduce       19     rule ::= number head DISJUNCTION bodydef

State 68:
          rule ::= number head * DISJUNCTION bodydef
          rule ::= number head * REVERSE_IMPLICATION body
          head ::= head * DISJUNCTION bodydef

                   DISJUNCTION shift        29     
           REVERSE_IMPLICATION shift        25     

State 69:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables * RBRACKET RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        86     

State 70:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables * RBRACKET RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        92     

State 71:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 30     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 72:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 29     bodydef ::= NEGATION string LBRACKET variables RBRACKET

State 73:
          bodydef ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 28     bodydef ::= string LBRACKET variables RBRACKET

State 74:
      (0) start ::= prog *
          prog ::= prog * NEWLINE domain
          prog ::= prog * NEWLINE predicate
          prog ::= prog * NEWLINE decl
          prog ::= prog * NEWLINE rule
          prog ::= prog * NEWLINE

                             $ reduce       0      start ::= prog
                       NEWLINE shift        1      

State 75:
     (30) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
          predicate ::= NEGATION NEGATION string LBRACKET variables RBRACKET * DOT

                           DOT shift-reduce 39     predicate ::= NEGATION NEGATION string LBRACKET variables RBRACKET DOT
                     {default} reduce       30     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 76:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          predicate ::= NEGATION NEGATION string * LBRACKET variables RBRACKET DOT

                      LBRACKET shift        2      

State 77:
          rule ::= LPAREN head RPAREN * REVERSE_IMPLICATION body DOT

           REVERSE_IMPLICATION shift        19     

State 78:
          rule ::= head DISJUNCTION bodydef * DOT
     (25) head ::= head DISJUNCTION bodydef *

                           DOT shift-reduce 18     rule ::= head DISJUNCTION bodydef DOT
                     {default} reduce       25     head ::= head DISJUNCTION bodydef

State 79:
          rule ::= LBRACKET ruleU RBRACKET * DOT

                           DOT shift-reduce 14     rule ::= LBRACKET ruleU RBRACKET DOT

State 80:
          rule ::= LBRACKET ruleU * RBRACKET DOT

                      RBRACKET shift        79     

State 81:
          rule ::= REVERSE_IMPLICATION LBRACKET ruleU RBRACKET * DOT

                           DOT shift-reduce 13     rule ::= REVERSE_IMPLICATION LBRACKET ruleU RBRACKET DOT

State 82:
          rule ::= REVERSE_IMPLICATION LBRACKET ruleU * RBRACKET DOT

                      RBRACKET shift        81     

State 83:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET
          predicate ::= number NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        8      

State 84:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          predicate ::= number NEGATION NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        9      

State 85:
     (21) rule ::= number head REVERSE_IMPLICATION body *
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        28     
                     {default} reduce       21     rule ::= number head REVERSE_IMPLICATION body

State 86:
     (30) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET * RBRACKET

                      RBRACKET shift-reduce 31     bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
                     {default} reduce       30     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 87:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string * LBRACKET variables RBRACKET RBRACKET

                      LBRACKET shift        10     

State 88:
          rule ::= number LBRACKET ruleU * RBRACKET

                      RBRACKET shift-reduce 12     rule ::= number LBRACKET ruleU RBRACKET

State 89:
     (26) head ::= bodydef *
     (27) body ::= bodydef *

                   DISJUNCTION reduce       26     head ::= bodydef
                     {default} reduce       27     body ::= bodydef

State 90:
     (16) ruleU ::= head DISJUNCTION bodydef *
     (25) head ::= head DISJUNCTION bodydef *

                      RBRACKET reduce       16     ruleU ::= head DISJUNCTION bodydef
                     {default} reduce       25     head ::= head DISJUNCTION bodydef

State 91:
          ruleU ::= head * DISJUNCTION bodydef
          head ::= head * DISJUNCTION bodydef

                   DISJUNCTION shift        30     

State 92:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET * RBRACKET

                      RBRACKET shift-reduce 31     bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET

State 93:
          bodydef ::= LBRACKET NEGATION NEGATION string * LBRACKET variables RBRACKET RBRACKET

                      LBRACKET shift        12     

State 94:
          bodydef ::= LBRACKET NEGATION * NEGATION string LBRACKET variables RBRACKET RBRACKET

                      NEGATION shift        40     

State 95:
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET

                      NEGATION shift        94     

State 96:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        13     

State 97:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        14     

State 98:
          bodydef ::= string NEGATION * EQUAL string

                         EQUAL shift        42     

State 99:
          number ::= MINUS lnumber * DOT rnumber

                           DOT shift        44     

State 100:
          number ::= lnumber * DOT rnumber

                           DOT shift        46     

State 101:
     (47) number ::= NUMBER *
     (50) lnumber ::= NUMBER *

                           DOT reduce       50     lnumber ::= NUMBER
                     {default} reduce       47     number ::= NUMBER

State 102:
     (15) ruleU ::= body CONJUNCTION bodydef *
     (24) body ::= body CONJUNCTION bodydef *

                      RBRACKET reduce       15     ruleU ::= body CONJUNCTION bodydef
                     {default} reduce       24     body ::= body CONJUNCTION bodydef

State 103:
          ruleU ::= body * CONJUNCTION bodydef
          body ::= body * CONJUNCTION bodydef

                   CONJUNCTION shift        31     

State 104:
          rule ::= number REVERSE_IMPLICATION LBRACKET ruleU * RBRACKET

                      RBRACKET shift-reduce 11     rule ::= number REVERSE_IMPLICATION LBRACKET ruleU RBRACKET

State 105:
          rule ::= number REVERSE_IMPLICATION * LBRACKET ruleU RBRACKET

                      LBRACKET shift        16     

----------------------------------------------------
Symbols:
    0: $:
    1: EQUAL
    2: COMMA
    3: LPAREN
    4: RPAREN
    5: NEWLINE
    6: CONJUNCTION
    7: DISJUNCTION
    8: LBRACKET
    9: RBRACKET
   10: IMPLICATION
   11: REVERSE_IMPLICATION
   12: NEGATION
   13: WS
   14: DOT
   15: STRING
   16: NUMBER
   17: MINUS
   18: error:
   19: start: <lambda> LPAREN NEWLINE LBRACKET REVERSE_IMPLICATION NEGATION STRING NUMBER MINUS
   20: prog: <lambda> LPAREN NEWLINE LBRACKET REVERSE_IMPLICATION NEGATION STRING NUMBER MINUS
   21: domain: STRING
   22: domains: LPAREN
   23: predicate: NEGATION STRING NUMBER MINUS
   24: decl: STRING
   25: variables: STRING NUMBER MINUS
   26: rule: LPAREN LBRACKET REVERSE_IMPLICATION NEGATION STRING NUMBER MINUS
   27: body: LBRACKET NEGATION STRING
   28: bodydef: LBRACKET NEGATION STRING
   29: bodydef2:
   30: head: LBRACKET NEGATION STRING
   31: ruleU: LBRACKET NEGATION STRING
   32: number: NUMBER MINUS
   33: string: STRING
   34: variable: STRING NUMBER MINUS
   35: lnumber: NUMBER
   36: rnumber: NUMBER
