State 0:
          start ::= * prog
          prog ::= * prog NEWLINE domain
          prog ::= * domain
          prog ::= * prog NEWLINE predicate
          prog ::= * predicate
          prog ::= * prog NEWLINE decl
          prog ::= * decl
          prog ::= * prog NEWLINE rule
          prog ::= * rule
          prog ::= * prog NEWLINE ruleU
          prog ::= * ruleU
          prog ::= * prog NEWLINE
     (12) prog ::= *
          ruleU ::= * LBRACKET ruleI RBRACKET DOT
          ruleU ::= * NEGATION LBRACKET ruleI RBRACKET DOT
          rule ::= * body CONJUNCTION bodydef DOT
          rule ::= * body DISJUNCTION bodydef DOT
          rule ::= * body IMPLICATION head DOT
          rule ::= * number body IMPLICATION head
          rule ::= * number NEGATION NEGATION body IMPLICATION head
          rule ::= * number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                      LBRACKET shift        14     
                      NEGATION shift        30     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                         start accept
                          prog shift        65     
                        domain shift-reduce 2      prog ::= domain
                     predicate shift-reduce 4      prog ::= predicate
                          decl shift-reduce 6      prog ::= decl
                          rule shift-reduce 8      prog ::= rule
                         ruleU shift-reduce 10     prog ::= ruleU
                          body shift        49     
                       bodydef shift-reduce 25     body ::= bodydef
                        number shift        20     
                        string shift        43     
                       lnumber shift        82     
                     {default} reduce       12     prog ::=

State 1:
          prog ::= prog NEWLINE * domain
          prog ::= prog NEWLINE * predicate
          prog ::= prog NEWLINE * decl
          prog ::= prog NEWLINE * rule
          prog ::= prog NEWLINE * ruleU
     (11) prog ::= prog NEWLINE *
          ruleU ::= * LBRACKET ruleI RBRACKET DOT
          ruleU ::= * NEGATION LBRACKET ruleI RBRACKET DOT
          rule ::= * body CONJUNCTION bodydef DOT
          rule ::= * body DISJUNCTION bodydef DOT
          rule ::= * body IMPLICATION head DOT
          rule ::= * number body IMPLICATION head
          rule ::= * number NEGATION NEGATION body IMPLICATION head
          rule ::= * number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                      LBRACKET shift        14     
                      NEGATION shift        30     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                        domain shift-reduce 1      prog ::= prog NEWLINE domain
                     predicate shift-reduce 3      prog ::= prog NEWLINE predicate
                          decl shift-reduce 5      prog ::= prog NEWLINE decl
                          rule shift-reduce 7      prog ::= prog NEWLINE rule
                         ruleU shift-reduce 9      prog ::= prog NEWLINE ruleU
                          body shift        49     
                       bodydef shift-reduce 25     body ::= bodydef
                        number shift        20     
                        string shift        43     
                       lnumber shift        82     
                     {default} reduce       11     prog ::= prog NEWLINE

State 2:
          domains ::= LPAREN * variables RPAREN
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        52     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 3:
          bodydef ::= string LBRACKET * variables RBRACKET
          decl ::= string LBRACKET * variables RBRACKET
          predicate ::= string LBRACKET * variables RBRACKET DOT
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        53     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 4:
          bodydef ::= string LBRACKET * variables RBRACKET
          predicate ::= number string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        55     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 5:
          bodydef ::= string LBRACKET * variables RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        57     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 6:
          headdef ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        58     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 7:
          headdef ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        59     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 8:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        60     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 9:
          bodydef ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        61     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 10:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          bodydef2 ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        62     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 11:
          bodydef ::= string LBRACKET * variables RBRACKET
          bodydef2 ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                     variables shift        63     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 43     variables ::= variable
                       lnumber shift        82     

State 12:
          variables ::= variables COMMA * variable
          variable ::= * string
          variable ::= * number
          variable ::= * PLUS string
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                          PLUS shift        41     
                        STRING shift-reduce 48     string ::= STRING
                        NUMBER shift        83     
                         MINUS shift        39     
                        number shift-reduce 46     variable ::= number
                        string shift-reduce 45     variable ::= string
                      variable shift-reduce 44     variables ::= variables COMMA variable
                       lnumber shift        82     

State 13:
          ruleU ::= NEGATION LBRACKET * ruleI RBRACKET DOT
          ruleI ::= * body CONJUNCTION bodydef2
          ruleI ::= * body DISJUNCTION bodydef2
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                          body shift        64     
                       bodydef shift-reduce 25     body ::= bodydef
                         ruleI shift        73     
                        string shift        50     

State 14:
          ruleU ::= LBRACKET * ruleI RBRACKET DOT
          ruleI ::= * body CONJUNCTION bodydef2
          ruleI ::= * body DISJUNCTION bodydef2
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                          body shift        64     
                       bodydef shift-reduce 25     body ::= bodydef
                         ruleI shift        86     
                        string shift        50     

State 15:
          rule ::= number NEGATION NEGATION * body IMPLICATION head
          rule ::= number NEGATION NEGATION * LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          predicate ::= number NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        17     
                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                          body shift        47     
                       bodydef shift-reduce 25     body ::= bodydef
                        string shift        45     

State 16:
          rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION * head RBRACKET
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        31     
                        STRING shift-reduce 48     string ::= STRING
                          head shift        66     
                       headdef shift-reduce 34     head ::= headdef
                        string shift        68     

State 17:
          rule ::= number NEGATION NEGATION LBRACKET * body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                          body shift        46     
                       bodydef shift-reduce 25     body ::= bodydef
                        string shift        50     

State 18:
          rule ::= number NEGATION NEGATION body IMPLICATION * head
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        31     
                        STRING shift-reduce 48     string ::= STRING
                          head shift-reduce 21     rule ::= number NEGATION NEGATION body IMPLICATION head
                       headdef shift-reduce 34     head ::= headdef
                        string shift        68     

State 19:
          rule ::= number body IMPLICATION * head
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        31     
                        STRING shift-reduce 48     string ::= STRING
                          head shift-reduce 20     rule ::= number body IMPLICATION head
                       headdef shift-reduce 34     head ::= headdef
                        string shift        68     

State 20:
          rule ::= number * body IMPLICATION head
          rule ::= number * NEGATION NEGATION body IMPLICATION head
          rule ::= number * NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          predicate ::= number * string LBRACKET variables RBRACKET
          predicate ::= number * NEGATION NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        29     
                        STRING shift-reduce 48     string ::= STRING
                          body shift        48     
                       bodydef shift-reduce 25     body ::= bodydef
                        string shift        44     

State 21:
          rule ::= body IMPLICATION * head DOT
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        31     
                        STRING shift-reduce 48     string ::= STRING
                          head shift        69     
                       headdef shift-reduce 34     head ::= headdef
                        string shift        68     

State 22:
          ruleI ::= body DISJUNCTION * bodydef2
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          bodydef2 ::= * string LBRACKET variables RBRACKET
          bodydef2 ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef2 ::= * string EQUAL string
          bodydef2 ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        35     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift-reduce 24     body ::= body DISJUNCTION bodydef
                      bodydef2 shift-reduce 16     ruleI ::= body DISJUNCTION bodydef2
                        string shift        51     

State 23:
          ruleI ::= body CONJUNCTION * bodydef2
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          bodydef2 ::= * string LBRACKET variables RBRACKET
          bodydef2 ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef2 ::= * string EQUAL string
          bodydef2 ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        35     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift-reduce 23     body ::= body CONJUNCTION bodydef
                      bodydef2 shift-reduce 15     ruleI ::= body CONJUNCTION bodydef2
                        string shift        51     

State 24:
          bodydef ::= string EQUAL * string
          domain ::= string EQUAL * domains
          domains ::= * LPAREN variables RPAREN
          string ::= * STRING

                        LPAREN shift        2      
                        STRING shift-reduce 48     string ::= STRING
                       domains shift-reduce 41     domain ::= string EQUAL domains
                        string shift-reduce 28     bodydef ::= string EQUAL string

State 25:
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift-reduce 24     body ::= body DISJUNCTION bodydef
                        string shift        50     

State 26:
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift-reduce 23     body ::= body CONJUNCTION bodydef
                        string shift        50     

State 27:
          rule ::= body DISJUNCTION * bodydef DOT
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift        70     
                        string shift        50     

State 28:
          rule ::= body CONJUNCTION * bodydef DOT
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      NEGATION shift        32     
                        STRING shift-reduce 48     string ::= STRING
                       bodydef shift        71     
                        string shift        50     

State 29:
          rule ::= number NEGATION * NEGATION body IMPLICATION head
          rule ::= number NEGATION * NEGATION LBRACKET body IMPLICATION head RBRACKET
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          predicate ::= number NEGATION * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        15     
                        STRING shift-reduce 48     string ::= STRING
                        string shift        74     

State 30:
          ruleU ::= NEGATION * LBRACKET ruleI RBRACKET DOT
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        13     
                        STRING shift-reduce 48     string ::= STRING
                        string shift        74     

State 31:
          headdef ::= NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift        67     

State 32:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift        74     

State 33:
          bodydef ::= string NEGATION EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift-reduce 29     bodydef ::= string NEGATION EQUAL string

State 34:
          bodydef ::= string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift-reduce 28     bodydef ::= string EQUAL string

State 35:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef2 ::= NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift        77     

State 36:
          bodydef ::= string NEGATION EQUAL * string
          bodydef2 ::= string NEGATION EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift        78     

State 37:
          bodydef ::= string EQUAL * string
          bodydef2 ::= string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift        80     

State 38:
          number ::= MINUS lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 53     rnumber ::= NUMBER
                       rnumber shift-reduce 51     number ::= MINUS lnumber DOT rnumber

State 39:
          number ::= MINUS * lnumber DOT rnumber
          lnumber ::= * NUMBER

                        NUMBER shift-reduce 52     lnumber ::= NUMBER
                       lnumber shift        81     

State 40:
          number ::= lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 53     rnumber ::= NUMBER
                       rnumber shift-reduce 50     number ::= lnumber DOT rnumber

State 41:
          variable ::= PLUS * string
          string ::= * STRING

                        STRING shift-reduce 48     string ::= STRING
                        string shift-reduce 47     variable ::= PLUS string

State 42:
     (26) bodydef ::= string LBRACKET variables RBRACKET *
     (37) decl ::= string LBRACKET variables RBRACKET *
          predicate ::= string LBRACKET variables RBRACKET * DOT

                             $ reduce       37     decl ::= string LBRACKET variables RBRACKET
                       NEWLINE reduce       37     decl ::= string LBRACKET variables RBRACKET
                           DOT shift-reduce 38     predicate ::= string LBRACKET variables RBRACKET DOT
                     {default} reduce       26     bodydef ::= string LBRACKET variables RBRACKET

State 43:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          decl ::= string * LBRACKET variables RBRACKET
          predicate ::= string * LBRACKET variables RBRACKET DOT
          domain ::= string * EQUAL domains

                         EQUAL shift        24     
                      LBRACKET shift        3      
                      NEGATION shift        75     

State 44:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          predicate ::= number string * LBRACKET variables RBRACKET

                         EQUAL shift        34     
                      LBRACKET shift        4      
                      NEGATION shift        75     

State 45:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          predicate ::= number NEGATION NEGATION string * LBRACKET variables RBRACKET

                         EQUAL shift        34     
                      LBRACKET shift        5      
                      NEGATION shift        75     

State 46:
          rule ::= number NEGATION NEGATION LBRACKET body * IMPLICATION head RBRACKET
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        26     
                   DISJUNCTION shift        25     
                   IMPLICATION shift        16     

State 47:
          rule ::= number NEGATION NEGATION body * IMPLICATION head
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        26     
                   DISJUNCTION shift        25     
                   IMPLICATION shift        18     

State 48:
          rule ::= number body * IMPLICATION head
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        26     
                   DISJUNCTION shift        25     
                   IMPLICATION shift        19     

State 49:
          rule ::= body * CONJUNCTION bodydef DOT
          rule ::= body * DISJUNCTION bodydef DOT
          rule ::= body * IMPLICATION head DOT
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        28     
                   DISJUNCTION shift        27     
                   IMPLICATION shift        21     

State 50:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string

                         EQUAL shift        34     
                      LBRACKET shift        9      
                      NEGATION shift        75     

State 51:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          bodydef2 ::= string * LBRACKET variables RBRACKET
          bodydef2 ::= string * EQUAL string
          bodydef2 ::= string * NEGATION EQUAL string

                         EQUAL shift        37     
                      LBRACKET shift        11     
                      NEGATION shift        79     

State 52:
          domains ::= LPAREN variables * RPAREN
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                        RPAREN shift-reduce 42     domains ::= LPAREN variables RPAREN

State 53:
          bodydef ::= string LBRACKET variables * RBRACKET
          decl ::= string LBRACKET variables * RBRACKET
          predicate ::= string LBRACKET variables * RBRACKET DOT
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift        42     

State 54:
     (26) bodydef ::= string LBRACKET variables RBRACKET *
     (39) predicate ::= number string LBRACKET variables RBRACKET *

                             $ reduce       39     predicate ::= number string LBRACKET variables RBRACKET
                       NEWLINE reduce       39     predicate ::= number string LBRACKET variables RBRACKET
                     {default} reduce       26     bodydef ::= string LBRACKET variables RBRACKET

State 55:
          bodydef ::= string LBRACKET variables * RBRACKET
          predicate ::= number string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift        54     

State 56:
     (26) bodydef ::= string LBRACKET variables RBRACKET *
     (40) predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET *

                             $ reduce       40     predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET
                       NEWLINE reduce       40     predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       26     bodydef ::= string LBRACKET variables RBRACKET

State 57:
          bodydef ::= string LBRACKET variables * RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift        56     

State 58:
          headdef ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift-reduce 36     headdef ::= NEGATION string LBRACKET variables RBRACKET

State 59:
          headdef ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift-reduce 35     headdef ::= string LBRACKET variables RBRACKET

State 60:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift-reduce 27     bodydef ::= NEGATION string LBRACKET variables RBRACKET

State 61:
          bodydef ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift-reduce 26     bodydef ::= string LBRACKET variables RBRACKET

State 62:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          bodydef2 ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift        76     

State 63:
          bodydef ::= string LBRACKET variables * RBRACKET
          bodydef2 ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        12     
                      RBRACKET shift        84     

State 64:
          ruleI ::= body * CONJUNCTION bodydef2
          ruleI ::= body * DISJUNCTION bodydef2
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        23     
                   DISJUNCTION shift        22     

State 65:
      (0) start ::= prog *
          prog ::= prog * NEWLINE domain
          prog ::= prog * NEWLINE predicate
          prog ::= prog * NEWLINE decl
          prog ::= prog * NEWLINE rule
          prog ::= prog * NEWLINE ruleU
          prog ::= prog * NEWLINE

                             $ reduce       0      start ::= prog
                       NEWLINE shift        1      

State 66:
          rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION head * RBRACKET

                      RBRACKET shift-reduce 22     rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET

State 67:
          headdef ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        6      

State 68:
          headdef ::= string * LBRACKET variables RBRACKET

                      LBRACKET shift        7      

State 69:
          rule ::= body IMPLICATION head * DOT

                           DOT shift-reduce 19     rule ::= body IMPLICATION head DOT

State 70:
          rule ::= body DISJUNCTION bodydef * DOT
     (24) body ::= body DISJUNCTION bodydef *

                           DOT shift-reduce 18     rule ::= body DISJUNCTION bodydef DOT
                     {default} reduce       24     body ::= body DISJUNCTION bodydef

State 71:
          rule ::= body CONJUNCTION bodydef * DOT
     (23) body ::= body CONJUNCTION bodydef *

                           DOT shift-reduce 17     rule ::= body CONJUNCTION bodydef DOT
                     {default} reduce       23     body ::= body CONJUNCTION bodydef

State 72:
          ruleU ::= NEGATION LBRACKET ruleI RBRACKET * DOT

                           DOT shift-reduce 14     ruleU ::= NEGATION LBRACKET ruleI RBRACKET DOT

State 73:
          ruleU ::= NEGATION LBRACKET ruleI * RBRACKET DOT

                      RBRACKET shift        72     

State 74:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        8      

State 75:
          bodydef ::= string NEGATION * EQUAL string

                         EQUAL shift        33     

State 76:
     (27) bodydef ::= NEGATION string LBRACKET variables RBRACKET *
     (31) bodydef2 ::= NEGATION string LBRACKET variables RBRACKET *

                      RBRACKET reduce       31     bodydef2 ::= NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       27     bodydef ::= NEGATION string LBRACKET variables RBRACKET

State 77:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET
          bodydef2 ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        10     

State 78:
     (29) bodydef ::= string NEGATION EQUAL string *
     (33) bodydef2 ::= string NEGATION EQUAL string *

                      RBRACKET reduce       33     bodydef2 ::= string NEGATION EQUAL string
                     {default} reduce       29     bodydef ::= string NEGATION EQUAL string

State 79:
          bodydef ::= string NEGATION * EQUAL string
          bodydef2 ::= string NEGATION * EQUAL string

                         EQUAL shift        36     

State 80:
     (28) bodydef ::= string EQUAL string *
     (32) bodydef2 ::= string EQUAL string *

                      RBRACKET reduce       32     bodydef2 ::= string EQUAL string
                     {default} reduce       28     bodydef ::= string EQUAL string

State 81:
          number ::= MINUS lnumber * DOT rnumber

                           DOT shift        38     

State 82:
          number ::= lnumber * DOT rnumber

                           DOT shift        40     

State 83:
     (49) number ::= NUMBER *
     (52) lnumber ::= NUMBER *

                           DOT reduce       52     lnumber ::= NUMBER
                     {default} reduce       49     number ::= NUMBER

State 84:
     (26) bodydef ::= string LBRACKET variables RBRACKET *
     (30) bodydef2 ::= string LBRACKET variables RBRACKET *

                      RBRACKET reduce       30     bodydef2 ::= string LBRACKET variables RBRACKET
                     {default} reduce       26     bodydef ::= string LBRACKET variables RBRACKET

State 85:
          ruleU ::= LBRACKET ruleI RBRACKET * DOT

                           DOT shift-reduce 13     ruleU ::= LBRACKET ruleI RBRACKET DOT

State 86:
          ruleU ::= LBRACKET ruleI * RBRACKET DOT

                      RBRACKET shift        85     

----------------------------------------------------
Symbols:
    0: $:
    1: EQUAL
    2: COMMA
    3: LPAREN
    4: RPAREN
    5: NEWLINE
    6: CONJUNCTION
    7: DISJUNCTION
    8: LBRACKET
    9: RBRACKET
   10: IMPLICATION
   11: NEGATION
   12: WS
   13: DOT
   14: PLUS
   15: STRING
   16: NUMBER
   17: MINUS
   18: error:
   19: start: <lambda> NEWLINE LBRACKET NEGATION STRING NUMBER MINUS
   20: prog: <lambda> NEWLINE LBRACKET NEGATION STRING NUMBER MINUS
   21: domain: STRING
   22: domains: LPAREN
   23: predicate: STRING NUMBER MINUS
   24: decl: STRING
   25: variables: PLUS STRING NUMBER MINUS
   26: rule: NEGATION STRING NUMBER MINUS
   27: ruleU: LBRACKET NEGATION
   28: body: NEGATION STRING
   29: bodydef: NEGATION STRING
   30: bodydef2: NEGATION STRING
   31: head: NEGATION STRING
   32: headdef: NEGATION STRING
   33: ruleI: NEGATION STRING
   34: number: NUMBER MINUS
   35: string: STRING
   36: variable: PLUS STRING NUMBER MINUS
   37: lnumber: NUMBER
   38: rnumber: NUMBER
