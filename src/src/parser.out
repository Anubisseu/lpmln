State 0:
          start ::= * prog
          prog ::= * prog NEWLINE domain
          prog ::= * domain
          prog ::= * prog NEWLINE predicate
          prog ::= * predicate
          prog ::= * prog NEWLINE decl
          prog ::= * decl
          prog ::= * prog NEWLINE rule
          prog ::= * rule
          prog ::= * prog NEWLINE
     (10) prog ::= *
          rule ::= * number NEGATION LBRACKET ruleU RBRACKET
          rule ::= * NEGATION LBRACKET ruleU RBRACKET DOT
          rule ::= * LBRACKET ruleU RBRACKET DOT
          rule ::= * body CONJUNCTION bodydef DOT
          rule ::= * body DISJUNCTION bodydef DOT
          rule ::= * body IMPLICATION head DOT
          rule ::= * number body IMPLICATION head
          rule ::= * number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION string LBRACKET variables RBRACKET
          predicate ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                      LBRACKET shift        15     
                      NEGATION shift        31     
                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                         start accept
                          prog shift        71     
                        domain shift-reduce 2      prog ::= domain
                     predicate shift-reduce 4      prog ::= predicate
                          decl shift-reduce 6      prog ::= decl
                          rule shift-reduce 8      prog ::= rule
                          body shift        48     
                       bodydef shift-reduce 23     body ::= bodydef
                        number shift        20     
                        string shift        47     
                       lnumber shift        96     
                     {default} reduce       10     prog ::=

State 1:
          prog ::= prog NEWLINE * domain
          prog ::= prog NEWLINE * predicate
          prog ::= prog NEWLINE * decl
          prog ::= prog NEWLINE * rule
      (9) prog ::= prog NEWLINE *
          rule ::= * number NEGATION LBRACKET ruleU RBRACKET
          rule ::= * NEGATION LBRACKET ruleU RBRACKET DOT
          rule ::= * LBRACKET ruleU RBRACKET DOT
          rule ::= * body CONJUNCTION bodydef DOT
          rule ::= * body DISJUNCTION bodydef DOT
          rule ::= * body IMPLICATION head DOT
          rule ::= * number body IMPLICATION head
          rule ::= * number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          decl ::= * string LBRACKET variables RBRACKET
          predicate ::= * string LBRACKET variables RBRACKET DOT
          predicate ::= * number string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= * number NEGATION string LBRACKET variables RBRACKET
          predicate ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          domain ::= * string EQUAL domains
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                      LBRACKET shift        15     
                      NEGATION shift        31     
                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                        domain shift-reduce 1      prog ::= prog NEWLINE domain
                     predicate shift-reduce 3      prog ::= prog NEWLINE predicate
                          decl shift-reduce 5      prog ::= prog NEWLINE decl
                          rule shift-reduce 7      prog ::= prog NEWLINE rule
                          body shift        48     
                       bodydef shift-reduce 23     body ::= bodydef
                        number shift        20     
                        string shift        47     
                       lnumber shift        96     
                     {default} reduce       9      prog ::= prog NEWLINE

State 2:
          domains ::= LPAREN * variables RPAREN
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        53     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 3:
          bodydef ::= string LBRACKET * variables RBRACKET
          decl ::= string LBRACKET * variables RBRACKET
          predicate ::= string LBRACKET * variables RBRACKET DOT
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        54     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 4:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET * variables RBRACKET RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        55     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 5:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          predicate ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        57     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 6:
          bodydef ::= string LBRACKET * variables RBRACKET
          predicate ::= number string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        59     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 7:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          predicate ::= number NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        61     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 8:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        63     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 9:
          headdef ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        64     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 10:
          headdef ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        65     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 11:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET * variables RBRACKET RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        66     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 12:
          bodydef ::= NEGATION NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        67     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 13:
          bodydef ::= NEGATION string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        68     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 14:
          bodydef ::= string LBRACKET * variables RBRACKET
          variables ::= * variable
          variables ::= * variables COMMA variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                     variables shift        69     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 41     variables ::= variable
                       lnumber shift        96     

State 15:
          rule ::= LBRACKET * ruleU RBRACKET DOT
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * body DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        33     
                        STRING shift-reduce 45     string ::= STRING
                          body shift        70     
                       bodydef shift-reduce 23     body ::= bodydef
                         ruleU shift        78     
                        string shift        52     

State 16:
          rule ::= NEGATION LBRACKET * ruleU RBRACKET DOT
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * body DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                          body shift        70     
                       bodydef shift-reduce 23     body ::= bodydef
                         ruleU shift        81     
                        string shift        52     

State 17:
          variables ::= variables COMMA * variable
          variable ::= * string
          variable ::= * number
          string ::= * STRING
          number ::= * NUMBER
          number ::= * lnumber DOT rnumber
          number ::= * MINUS lnumber DOT rnumber
          lnumber ::= * NUMBER

                        STRING shift-reduce 45     string ::= STRING
                        NUMBER shift        97     
                         MINUS shift        44     
                        number shift-reduce 44     variable ::= number
                        string shift-reduce 43     variable ::= string
                      variable shift-reduce 42     variables ::= variables COMMA variable
                       lnumber shift        96     

State 18:
          rule ::= number NEGATION LBRACKET * ruleU RBRACKET
          ruleU ::= * body CONJUNCTION bodydef
          ruleU ::= * body DISJUNCTION bodydef
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                          body shift        70     
                       bodydef shift-reduce 23     body ::= bodydef
                         ruleU shift        99     
                        string shift        52     

State 19:
          rule ::= number NEGATION NEGATION LBRACKET * body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                          body shift        51     
                       bodydef shift-reduce 23     body ::= bodydef
                        string shift        52     

State 20:
          rule ::= number * NEGATION LBRACKET ruleU RBRACKET
          rule ::= number * body IMPLICATION head
          rule ::= number * NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET
          body ::= * body CONJUNCTION bodydef
          body ::= * body DISJUNCTION bodydef
          body ::= * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          predicate ::= number * string LBRACKET variables RBRACKET
          predicate ::= number * NEGATION NEGATION string LBRACKET variables RBRACKET
          predicate ::= number * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        32     
                        STRING shift-reduce 45     string ::= STRING
                          body shift        50     
                       bodydef shift-reduce 23     body ::= bodydef
                        string shift        49     

State 21:
          rule ::= body IMPLICATION * head DOT
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        38     
                        STRING shift-reduce 45     string ::= STRING
                          head shift        72     
                       headdef shift-reduce 30     head ::= headdef
                        string shift        85     

State 22:
          rule ::= number body IMPLICATION * head
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        38     
                        STRING shift-reduce 45     string ::= STRING
                          head shift-reduce 19     rule ::= number body IMPLICATION head
                       headdef shift-reduce 30     head ::= headdef
                        string shift        85     

State 23:
          rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION * head RBRACKET
          head ::= * headdef
          headdef ::= * string LBRACKET variables RBRACKET
          headdef ::= * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        38     
                        STRING shift-reduce 45     string ::= STRING
                          head shift        86     
                       headdef shift-reduce 30     head ::= headdef
                        string shift        85     

State 24:
          rule ::= body DISJUNCTION * bodydef DOT
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift        73     
                        string shift        52     

State 25:
          rule ::= body CONJUNCTION * bodydef DOT
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift        74     
                        string shift        52     

State 26:
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift-reduce 22     body ::= body DISJUNCTION bodydef
                        string shift        52     

State 27:
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift-reduce 21     body ::= body CONJUNCTION bodydef
                        string shift        52     

State 28:
          ruleU ::= body DISJUNCTION * bodydef
          body ::= body DISJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift        87     
                        string shift        52     

State 29:
          ruleU ::= body CONJUNCTION * bodydef
          body ::= body CONJUNCTION * bodydef
          bodydef ::= * string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * NEGATION NEGATION string LBRACKET variables RBRACKET
          bodydef ::= * LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
          bodydef ::= * string EQUAL string
          bodydef ::= * string NEGATION EQUAL string
          string ::= * STRING

                      LBRACKET shift        91     
                      NEGATION shift        35     
                        STRING shift-reduce 45     string ::= STRING
                       bodydef shift        98     
                        string shift        52     

State 30:
          bodydef ::= string EQUAL * string
          domain ::= string EQUAL * domains
          domains ::= * LPAREN variables RPAREN
          string ::= * STRING

                        LPAREN shift        2      
                        STRING shift-reduce 45     string ::= STRING
                       domains shift-reduce 39     domain ::= string EQUAL domains
                        string shift-reduce 28     bodydef ::= string EQUAL string

State 31:
          rule ::= NEGATION * LBRACKET ruleU RBRACKET DOT
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        16     
                      NEGATION shift        37     
                        STRING shift-reduce 45     string ::= STRING
                        string shift        93     

State 32:
          rule ::= number NEGATION * LBRACKET ruleU RBRACKET
          rule ::= number NEGATION * NEGATION LBRACKET body IMPLICATION head RBRACKET
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= number NEGATION * NEGATION string LBRACKET variables RBRACKET
          predicate ::= number NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        18     
                      NEGATION shift        34     
                        STRING shift-reduce 45     string ::= STRING
                        string shift        82     

State 33:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION * NEGATION string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                      NEGATION shift        36     
                        STRING shift-reduce 45     string ::= STRING
                        string shift        93     

State 34:
          rule ::= number NEGATION NEGATION * LBRACKET body IMPLICATION head RBRACKET
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          predicate ::= number NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                      LBRACKET shift        19     
                        STRING shift-reduce 45     string ::= STRING
                        string shift        83     

State 35:
          bodydef ::= NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= NEGATION * NEGATION string LBRACKET variables RBRACKET
          string ::= * STRING

                      NEGATION shift        40     
                        STRING shift-reduce 45     string ::= STRING
                        string shift        93     

State 36:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION * string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift        76     

State 37:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          predicate ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift        79     

State 38:
          headdef ::= NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift        84     

State 39:
          bodydef ::= LBRACKET NEGATION NEGATION * string LBRACKET variables RBRACKET RBRACKET
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift        89     

State 40:
          bodydef ::= NEGATION NEGATION * string LBRACKET variables RBRACKET
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift        92     

State 41:
          bodydef ::= string NEGATION EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift-reduce 29     bodydef ::= string NEGATION EQUAL string

State 42:
          bodydef ::= string EQUAL * string
          string ::= * STRING

                        STRING shift-reduce 45     string ::= STRING
                        string shift-reduce 28     bodydef ::= string EQUAL string

State 43:
          number ::= MINUS lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 50     rnumber ::= NUMBER
                       rnumber shift-reduce 48     number ::= MINUS lnumber DOT rnumber

State 44:
          number ::= MINUS * lnumber DOT rnumber
          lnumber ::= * NUMBER

                        NUMBER shift-reduce 49     lnumber ::= NUMBER
                       lnumber shift        95     

State 45:
          number ::= lnumber DOT * rnumber
          rnumber ::= * NUMBER

                        NUMBER shift-reduce 50     rnumber ::= NUMBER
                       rnumber shift-reduce 47     number ::= lnumber DOT rnumber

State 46:
     (24) bodydef ::= string LBRACKET variables RBRACKET *
     (33) decl ::= string LBRACKET variables RBRACKET *
          predicate ::= string LBRACKET variables RBRACKET * DOT

                             $ reduce       33     decl ::= string LBRACKET variables RBRACKET
                       NEWLINE reduce       33     decl ::= string LBRACKET variables RBRACKET
                           DOT shift-reduce 34     predicate ::= string LBRACKET variables RBRACKET DOT
                     {default} reduce       24     bodydef ::= string LBRACKET variables RBRACKET

State 47:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          decl ::= string * LBRACKET variables RBRACKET
          predicate ::= string * LBRACKET variables RBRACKET DOT
          domain ::= string * EQUAL domains

                         EQUAL shift        30     
                      LBRACKET shift        3      
                      NEGATION shift        94     

State 48:
          rule ::= body * CONJUNCTION bodydef DOT
          rule ::= body * DISJUNCTION bodydef DOT
          rule ::= body * IMPLICATION head DOT
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        25     
                   DISJUNCTION shift        24     
                   IMPLICATION shift        21     

State 49:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string
          predicate ::= number string * LBRACKET variables RBRACKET

                         EQUAL shift        42     
                      LBRACKET shift        6      
                      NEGATION shift        94     

State 50:
          rule ::= number body * IMPLICATION head
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        27     
                   DISJUNCTION shift        26     
                   IMPLICATION shift        22     

State 51:
          rule ::= number NEGATION NEGATION LBRACKET body * IMPLICATION head RBRACKET
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        27     
                   DISJUNCTION shift        26     
                   IMPLICATION shift        23     

State 52:
          bodydef ::= string * LBRACKET variables RBRACKET
          bodydef ::= string * EQUAL string
          bodydef ::= string * NEGATION EQUAL string

                         EQUAL shift        42     
                      LBRACKET shift        14     
                      NEGATION shift        94     

State 53:
          domains ::= LPAREN variables * RPAREN
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                        RPAREN shift-reduce 40     domains ::= LPAREN variables RPAREN

State 54:
          bodydef ::= string LBRACKET variables * RBRACKET
          decl ::= string LBRACKET variables * RBRACKET
          predicate ::= string LBRACKET variables * RBRACKET DOT
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        46     

State 55:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables * RBRACKET RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        75     

State 56:
     (26) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
     (38) predicate ::= NEGATION NEGATION string LBRACKET variables RBRACKET *

                             $ reduce       38     predicate ::= NEGATION NEGATION string LBRACKET variables RBRACKET
                       NEWLINE reduce       38     predicate ::= NEGATION NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       26     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 57:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          predicate ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        56     

State 58:
     (24) bodydef ::= string LBRACKET variables RBRACKET *
     (35) predicate ::= number string LBRACKET variables RBRACKET *

                             $ reduce       35     predicate ::= number string LBRACKET variables RBRACKET
                       NEWLINE reduce       35     predicate ::= number string LBRACKET variables RBRACKET
                     {default} reduce       24     bodydef ::= string LBRACKET variables RBRACKET

State 59:
          bodydef ::= string LBRACKET variables * RBRACKET
          predicate ::= number string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        58     

State 60:
     (25) bodydef ::= NEGATION string LBRACKET variables RBRACKET *
     (37) predicate ::= number NEGATION string LBRACKET variables RBRACKET *

                             $ reduce       37     predicate ::= number NEGATION string LBRACKET variables RBRACKET
                       NEWLINE reduce       37     predicate ::= number NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       25     bodydef ::= NEGATION string LBRACKET variables RBRACKET

State 61:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          predicate ::= number NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        60     

State 62:
     (26) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
     (36) predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET *

                             $ reduce       36     predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET
                       NEWLINE reduce       36     predicate ::= number NEGATION NEGATION string LBRACKET variables RBRACKET
                     {default} reduce       26     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 63:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          predicate ::= number NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        62     

State 64:
          headdef ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 32     headdef ::= NEGATION string LBRACKET variables RBRACKET

State 65:
          headdef ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 31     headdef ::= string LBRACKET variables RBRACKET

State 66:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables * RBRACKET RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift        88     

State 67:
          bodydef ::= NEGATION NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 26     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 68:
          bodydef ::= NEGATION string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 25     bodydef ::= NEGATION string LBRACKET variables RBRACKET

State 69:
          bodydef ::= string LBRACKET variables * RBRACKET
          variables ::= variables * COMMA variable

                         COMMA shift        17     
                      RBRACKET shift-reduce 24     bodydef ::= string LBRACKET variables RBRACKET

State 70:
          ruleU ::= body * CONJUNCTION bodydef
          ruleU ::= body * DISJUNCTION bodydef
          body ::= body * CONJUNCTION bodydef
          body ::= body * DISJUNCTION bodydef

                   CONJUNCTION shift        29     
                   DISJUNCTION shift        28     

State 71:
      (0) start ::= prog *
          prog ::= prog * NEWLINE domain
          prog ::= prog * NEWLINE predicate
          prog ::= prog * NEWLINE decl
          prog ::= prog * NEWLINE rule
          prog ::= prog * NEWLINE

                             $ reduce       0      start ::= prog
                       NEWLINE shift        1      

State 72:
          rule ::= body IMPLICATION head * DOT

                           DOT shift-reduce 18     rule ::= body IMPLICATION head DOT

State 73:
          rule ::= body DISJUNCTION bodydef * DOT
     (22) body ::= body DISJUNCTION bodydef *

                           DOT shift-reduce 17     rule ::= body DISJUNCTION bodydef DOT
                     {default} reduce       22     body ::= body DISJUNCTION bodydef

State 74:
          rule ::= body CONJUNCTION bodydef * DOT
     (21) body ::= body CONJUNCTION bodydef *

                           DOT shift-reduce 16     rule ::= body CONJUNCTION bodydef DOT
                     {default} reduce       21     body ::= body CONJUNCTION bodydef

State 75:
     (26) bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET *
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET * RBRACKET

                      RBRACKET shift-reduce 27     bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET
                     {default} reduce       26     bodydef ::= NEGATION NEGATION string LBRACKET variables RBRACKET

State 76:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          bodydef ::= LBRACKET NEGATION NEGATION string * LBRACKET variables RBRACKET RBRACKET

                      LBRACKET shift        4      

State 77:
          rule ::= LBRACKET ruleU RBRACKET * DOT

                           DOT shift-reduce 13     rule ::= LBRACKET ruleU RBRACKET DOT

State 78:
          rule ::= LBRACKET ruleU * RBRACKET DOT

                      RBRACKET shift        77     

State 79:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          predicate ::= NEGATION NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        5      

State 80:
          rule ::= NEGATION LBRACKET ruleU RBRACKET * DOT

                           DOT shift-reduce 12     rule ::= NEGATION LBRACKET ruleU RBRACKET DOT

State 81:
          rule ::= NEGATION LBRACKET ruleU * RBRACKET DOT

                      RBRACKET shift        80     

State 82:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET
          predicate ::= number NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        7      

State 83:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET
          predicate ::= number NEGATION NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        8      

State 84:
          headdef ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        9      

State 85:
          headdef ::= string * LBRACKET variables RBRACKET

                      LBRACKET shift        10     

State 86:
          rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION head * RBRACKET

                      RBRACKET shift-reduce 20     rule ::= number NEGATION NEGATION LBRACKET body IMPLICATION head RBRACKET

State 87:
     (15) ruleU ::= body DISJUNCTION bodydef *
     (22) body ::= body DISJUNCTION bodydef *

                      RBRACKET reduce       15     ruleU ::= body DISJUNCTION bodydef
                     {default} reduce       22     body ::= body DISJUNCTION bodydef

State 88:
          bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET * RBRACKET

                      RBRACKET shift-reduce 27     bodydef ::= LBRACKET NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET

State 89:
          bodydef ::= LBRACKET NEGATION NEGATION string * LBRACKET variables RBRACKET RBRACKET

                      LBRACKET shift        11     

State 90:
          bodydef ::= LBRACKET NEGATION * NEGATION string LBRACKET variables RBRACKET RBRACKET

                      NEGATION shift        39     

State 91:
          bodydef ::= LBRACKET * NEGATION NEGATION string LBRACKET variables RBRACKET RBRACKET

                      NEGATION shift        90     

State 92:
          bodydef ::= NEGATION NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        12     

State 93:
          bodydef ::= NEGATION string * LBRACKET variables RBRACKET

                      LBRACKET shift        13     

State 94:
          bodydef ::= string NEGATION * EQUAL string

                         EQUAL shift        41     

State 95:
          number ::= MINUS lnumber * DOT rnumber

                           DOT shift        43     

State 96:
          number ::= lnumber * DOT rnumber

                           DOT shift        45     

State 97:
     (46) number ::= NUMBER *
     (49) lnumber ::= NUMBER *

                           DOT reduce       49     lnumber ::= NUMBER
                     {default} reduce       46     number ::= NUMBER

State 98:
     (14) ruleU ::= body CONJUNCTION bodydef *
     (21) body ::= body CONJUNCTION bodydef *

                      RBRACKET reduce       14     ruleU ::= body CONJUNCTION bodydef
                     {default} reduce       21     body ::= body CONJUNCTION bodydef

State 99:
          rule ::= number NEGATION LBRACKET ruleU * RBRACKET

                      RBRACKET shift-reduce 11     rule ::= number NEGATION LBRACKET ruleU RBRACKET

----------------------------------------------------
Symbols:
    0: $:
    1: EQUAL
    2: COMMA
    3: LPAREN
    4: RPAREN
    5: NEWLINE
    6: CONJUNCTION
    7: DISJUNCTION
    8: LBRACKET
    9: RBRACKET
   10: IMPLICATION
   11: NEGATION
   12: WS
   13: DOT
   14: STRING
   15: NUMBER
   16: MINUS
   17: error:
   18: start: <lambda> NEWLINE LBRACKET NEGATION STRING NUMBER MINUS
   19: prog: <lambda> NEWLINE LBRACKET NEGATION STRING NUMBER MINUS
   20: domain: STRING
   21: domains: LPAREN
   22: predicate: NEGATION STRING NUMBER MINUS
   23: decl: STRING
   24: variables: STRING NUMBER MINUS
   25: rule: LBRACKET NEGATION STRING NUMBER MINUS
   26: body: LBRACKET NEGATION STRING
   27: bodydef: LBRACKET NEGATION STRING
   28: bodydef2:
   29: head: NEGATION STRING
   30: headdef: NEGATION STRING
   31: ruleU: LBRACKET NEGATION STRING
   32: number: NUMBER MINUS
   33: string: STRING
   34: variable: STRING NUMBER MINUS
   35: lnumber: NUMBER
   36: rnumber: NUMBER
