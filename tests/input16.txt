// Domain: Monty Hall

// **** Declaration ****
door = {D1, D2, D3}
constant = {Prize, Selected, Open}
number = {2, 3}
boolean = {T, F}

prize(door)
selected(door)
open(door)
canopen(door, boolean)

Intervene(constant)
PosswithAssProb(constant, door)
PosswithDefProb(constant, door)
NumDefProb(constant, number)
Do(constant, door)
Obs(constant, door)

// **** RegularPart ****
selected(d) => canopen(d, F).
prize(d) => canopen(d, F).
!canopen(d, F) => canopen(d, T).

//constrints
!(canopen(d, T) ^ canopen(d, F)).
!(prize(d1) ^ prize(d2) ^ d1 != d2).
!(selected(d1) ^ selected(d2) ^ d1 != d2).
!(open(d1) ^ open(d2) ^ d1 != d2).

// **** RandomSelection ****
!Intervene(Prize) ^ !prize(D2) ^ !prize(D3)=> prize(D1).
!Intervene(Prize) ^ !prize(D1) ^ !prize(D3)=> prize(D2).
!Intervene(Prize) ^ !prize(D2) ^ !prize(D1)=> prize(D3).

!selected(D2) ^ !selected(D3) ^ !Intervene(Selected) => selected(D1).
!selected(D3) ^ !selected(D1) ^ !Intervene(Selected) => selected(D2).
!selected(D2) ^ !selected(D1) ^ !Intervene(Selected) => selected(D3).

!open(D1) ^ !open(D2) ^ !Intervene(Open) => open(D3).
!open(D1) ^ !open(D3) ^ !Intervene(Open) => open(D2).
!open(D3) ^ !open(D2) ^ !Intervene(Open) => open(D1).



!(open(d) ^ !canopen(d, T) ^ !Intervene(Open)).

!PosswithAssProb(Selected, d) ^ !Intervene(Selected) => PosswithDefProb(Selected, d).
!PosswithAssProb(Prize, d) ^ !Intervene(Prize) => PosswithDefProb(Prize, d).
!PosswithAssProb(Open, d) ^ canopen(d,T) ^ !Intervene(Open) => PosswithDefProb(Open, d).

prize(d1) ^ PosswithDefProb(Prize, d1)^ PosswithDefProb(Prize, d2)^ d1 != d2 => NumDefProb(Prize, 2).
prize(d1)^ PosswithDefProb(Prize, d1)^ PosswithDefProb(Prize, d2)^ PosswithDefProb(Prize, d3)^ d1 != d2^ d1 != d3 ^ d2 != d3 => NumDefProb(Prize, 3).

selected(d1) ^ PosswithDefProb(Selected, d1) ^ PosswithDefProb(Selected, d2)^ d1 != d2 => NumDefProb(Selected, 2).
selected(d1) ^ PosswithDefProb(Selected, d1) ^ PosswithDefProb(Selected, d2)^ PosswithDefProb(Selected, d3) ^ d1 != d2 ^ d1 != d3 ^ d2 != d3 => NumDefProb(Selected, 3).

open(d1) ^ PosswithDefProb(Open, d1) ^ PosswithDefProb(Open, d2) ^ d1 != d2 => NumDefProb(Open, 2).
open(d1) ^ PosswithDefProb(Open, d1) ^ PosswithDefProb(Open, d2) ^ PosswithDefProb(Open, d3) ^ d1 != d2 ^ d1 != d3 ^ d2 != d3 => NumDefProb(Open, 3).

-0.6931 NumDefProb(c, 2)
-0.4054 NumDefProb(c, 3)


// **** Do ****
Do(Selected, D1).
Do(Selected, D1) => selected(D1).
Do(Selected, D1) => Intervene(Selected).

// **** Obs ****
Obs(Open, D2).
!(Obs(Open, D2) ^ !open(D2)).